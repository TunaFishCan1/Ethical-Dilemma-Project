{"remainingRequest":"/Users/jiwon/Desktop/Ethical-Dilemma-Project/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/jiwon/Desktop/Ethical-Dilemma-Project/src/components/Quiz.vue?vue&type=style&index=0&id=3e240e42&lang=css","dependencies":[{"path":"/Users/jiwon/Desktop/Ethical-Dilemma-Project/src/components/Quiz.vue","mtime":1606536473805},{"path":"/Users/jiwon/Desktop/Ethical-Dilemma-Project/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiwon/Desktop/Ethical-Dilemma-Project/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1606322537000},{"path":"/Users/jiwon/Desktop/Ethical-Dilemma-Project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jiwon/Desktop/Ethical-Dilemma-Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiwon/Desktop/Ethical-Dilemma-Project/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1606322537000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qCiNzZW5kIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogMjYycHg7CiAgCn0KI3llcyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDEwMHB4OwogIHJpZ2h0OiAxMDBweDsKfSovCiNyZXN1bHQgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQojYW5zd2VyIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgbGVmdDogMjAwcHg7Cn0KLyoKI25leHQgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDIwMHB4Owp9Ki8K"},{"version":3,"sources":["/Users/jiwon/Desktop/Ethical-Dilemma-Project/src/components/Quiz.vue"],"names":[],"mappings":";AAmFA,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEb;AACA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACb;AACA,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC","file":"/Users/jiwon/Desktop/Ethical-Dilemma-Project/src/components/Quiz.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <h2>Dilemma Quiz</h2>\n    <p>{{dilemmaList[number].dilemma}}</p>\n    <span id=\"answer\" v-show=\"answer\">\n      <button @click=\"yes()\">YES</button><button @click=\"no()\">NO</button>\n    </span>\n    \n    <p>Share your opinion</p>\n    <div>\n      <textarea name=\"comment\" cols=\"30\" rows=\"10\" v-model=\"opinion\"></textarea>\n      <button id=\"send\" @click=\"send(opinion)\">Send</button>\n    </div>\n    <button id=\"result\" @click=\"result()\">Show results</button>\n    <button id=\"next\" @click=\"next()\">next</button>\n    <span v-if=\"number !== 0\"><button id=\"prev\" @click=\"prev()\">prev</button></span>\n    <div v-show=\"show\">123</div>\n    \n  </div>\n</template>\n\n<script>\nimport db from './firebaseinit'\nimport firebase from 'firebase/app'\n\nexport default {\n  data() {\n    return {\n      opinion: \"\",\n      show: false,\n      dilemmaList: [],\n      number: 0,\n      answer: true\n    }\n  },\n  created() {\n    db.collection('dilemmas')\n      .orderBy('Number', 'desc')\n      .onSnapshot(snapshot => {\n        this.dilemmaList = snapshot.docs\n          .map(doc => {\n            return {\n              id: doc.id,\n              ...doc.data()\n            }\n          }).reverse()\n      })\n  },\n  methods: {\n    yes() {\n      db.collection('dilemmas')\n        .doc(this.dilemmaList[this.number].id)\n        .update({\n          yes: firebase.firestore.FieldValue.increment(1)\n        })\n      this.answer = false\n    },\n    no() {\n      db.collection('dilemmas')\n        .doc(this.dilemmaList[this.number].id)\n        .update({\n          no: firebase.firestore.FieldValue.increment(1)\n        })\n      this.answer = false\n    },\n    send() {\n\n    },\n    result() {\n      this.show = true\n    },\n    next() {\n      this.number = this.number + 1\n      this.answer = true\n    },\n    prev() {\n      this.number = this.number - 1\n    }\n  }\n}\n</script>\n\n<style>\n/*\n#send {\n  position: absolute;\n  left: 262px;\n  \n}\n#yes {\n  position: absolute;\n  left: 100px;\n  right: 100px;\n}*/\n#result {\n  position: relative;\n}\n#answer {\n  position: relative;\n  left: 200px;\n}\n/*\n#next {\n  position: absolute;\n  top: 200px;\n}*/\n</style>"]}]}